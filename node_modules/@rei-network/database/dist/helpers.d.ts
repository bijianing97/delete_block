/// <reference types="bn.js" />
/// <reference types="node" />
import { BN } from 'ethereumjs-util';
import { Block, BlockHeader, Receipt } from '@rei-network/structure';
import { DBOp } from './operation';
declare function DBSetTD(TD: BN, blockNumber: BN, blockHash: Buffer): DBOp;
declare function DBSetBlockOrHeader(blockBody: Block | BlockHeader): DBOp[];
declare function DBSetHashToNumber(blockHash: Buffer, blockNumber: BN): DBOp;
declare function DBSaveLookups(blockHash: Buffer, blockNumber: BN): DBOp[];
/**
 * Create Receipts operation for the given receipts
 * @param receipts - Target receipts
 * @param blockHash - Block hash
 * @param blockNumber - Block number
 * @returns New operation
 */
declare function DBSaveReceipts(receipts: Receipt[], blockHash: Buffer, blockNumber: BN): DBOp;
/**
 * Create TxLookup operations for all transactions of the given block
 * @param block - Target block
 * @returns Array of operations
 */
declare function DBSaveTxLookup(block: Block): DBOp[];
/**
 * Create BloomBits operation for the given section
 * @param bit - Bit index of target section
 * @param section - Section number
 * @param hash - Hash of the last block header of the target section
 * @param bits - Bloom bits data
 * @returns New operation
 */
declare function DBSaveBloomBits(bit: number, section: BN, hash: Buffer, bits: Buffer): DBOp;
/**
 * Create BloomBitsSectionCount operation
 * @param section - Section number
 * @returns  New operation
 */
declare function DBSaveBloomBitsSectionCount(section: BN): DBOp;
/**
 * Create a operation to delete BloomBitsSectionCount
 * @returns New operation
 */
declare function DBDeleteBloomBitsSectionCount(): DBOp;
export { DBOp, DBSetTD, DBSetBlockOrHeader, DBSetHashToNumber, DBSaveLookups, DBSaveReceipts, DBSaveTxLookup, DBSaveBloomBits, DBSaveBloomBitsSectionCount, DBDeleteBloomBitsSectionCount };
